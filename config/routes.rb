Rails.application.routes.draw do
  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html

  # order of routes matters, if new is after :id then we would never land in new page
  get "blog_posts/new", to: "blog_posts#new" , as: :new_blog_post
  get "/blog_posts/:id/edit", to:"blog_posts#edit", as: :edit_blog_post
  # In Rails' routes.rb file, routes are defined to map incoming requests to the appropriate controller and action that should handle the request. The get method is used to define a route that responds to an HTTP GET request.
  # The route get "blog_posts/:id" , "blog_post#show" maps the URL "/blog_posts/:id" to the show action in the BlogPostController controller. The :id portion of the URL is a dynamic segment that will match any value and pass it to the show action as a parameter.
  get "blog_posts/:id", to: "blog_posts#show", as: :blog_post
# Generated automatically
# blog_post_path(1) ==> "/blog_posts/1
# blog_post_url(1) ==> "http://localhost:3000/blog_posts/1
# =================================================================================================
# So, when you submit the form generated by form_with in the view, the form data will be sent as a POST request to the URL path /blog_posts. The create action in the BlogPostsController will receive this request, and it will create a new BlogPost object based on the submitted form data.
  post "/blog_posts", to: "blog_posts#create", as: :blog_posts
# =================================================================================================
  # Since we already have a path for this route in line 9 we don't need to specify a new name (Routes are just strings and Rails doesn't care what type of request it is)
  # To see why this became our route, try clicking on the update btn and check the html in inspector, you see that the form is gonna be submitted to this route and not /blog_posts/:id/edit
  patch "/blog_posts/:id", to:"blog_posts#update" 
 # =================================================================================================

  delete "/blog_posts/:id", to:"blog_posts#destroy"


# =================================================================================================================================================================
# Instead of defining routes one by one we can use a rails helper called resources
# resources :blog_posts
# This also comes with a new route called : get "/blog_posts" , to: "blog_posts#index", as: :blog_posts


  # Defines the root path route ("/") ==> if we remove this the home page would be the default rails homepage so we won't remove the line below
  root "blog_posts#index"
end
